apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[]'
    capabilities: Basic Install
    createdAt: "2024-12-06T21:00:49Z"
    operators.operatorframework.io/builder: operator-sdk-v1.37.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
  name: lws.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: LeaderWorkerSet is the Schema for the leaderworkersets API
      displayName: Leader Worker Set
      kind: LeaderWorkerSet
      name: leaderworkersets.leaderworkerset.x-k8s.io
      version: v1
  description: 'LeaderWorkerSet: An API for deploying a group of pods as a unit of
    replication'
  displayName: lws
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - update
          - watch
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
          verbs:
          - get
          - list
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets/finalizers
          verbs:
          - update
        - apiGroups:
          - apps
          resources:
          - statefulsets/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - leaderworkerset.x-k8s.io
          resources:
          - leaderworkersets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - leaderworkerset.x-k8s.io
          resources:
          - leaderworkersets/finalizers
          verbs:
          - update
        - apiGroups:
          - leaderworkerset.x-k8s.io
          resources:
          - leaderworkersets/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: lws-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: lws
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: lws
          control-plane: controller-manager
        name: lws-controller-manager
        spec:
          replicas: 2
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --namespace=lws-system
                - --zap-log-level=2
                command:
                - /manager
                image: quay.io/redhat-user-workloads/kueue-workloads-tenant/kubernetes-sigs-lws@sha256:89f45f5bf6259244e6d9151a2bbf7d465992d62a12d7639840d85fb5f2ab96d9
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  requests:
                    cpu: "1"
                    memory: 1Gi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    memory: 1Gi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: lws-controller-manager
              terminationGracePeriodSeconds: 10
              volumes:
              - name: cert
                secret:
                  defaultMode: 420
                  secretName: lws-webhook-server-cert
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: lws-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - inferencing
  links:
  - name: Lws
    url: https://lws.domain
  maintainers:
  - email: kehannon@redhat.com
    name: kevinhannon
  maturity: alpha
  minKubeVersion: 1.32.0
  provider:
    name: openshift
  version: 0.0.1
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    conversionCRDs:
    - leaderworkersets.leaderworkerset.x-k8s.io
    deploymentName: lws-controller-manager
    generateName: cleaderworkersets.kb.io
    sideEffects: None
    targetPort: 9443
    type: ConversionWebhook
    webhookPath: /convert
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: lws-controller-manager
    failurePolicy: Fail
    generateName: mleaderworkerset.kb.io
    rules:
    - apiGroups:
      - leaderworkerset.x-k8s.io
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - leaderworkersets
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-leaderworkerset-x-k8s-io-v1-leaderworkerset
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: lws-controller-manager
    failurePolicy: Fail
    generateName: mpod.kb.io
    objectSelector:
      matchExpressions:
      - key: leaderworkerset.sigs.k8s.io/name
        operator: Exists
    rules:
    - apiGroups:
      - ""
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pods
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate--v1-pod
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: lws-controller-manager
    failurePolicy: Fail
    generateName: vleaderworkerset.kb.io
    rules:
    - apiGroups:
      - leaderworkerset.x-k8s.io
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - leaderworkersets
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-leaderworkerset-x-k8s-io-v1-leaderworkerset
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: lws-controller-manager
    failurePolicy: Fail
    generateName: vpod.kb.io
    objectSelector:
      matchExpressions:
      - key: leaderworkerset.sigs.k8s.io/name
        operator: Exists
    rules:
    - apiGroups:
      - ""
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pods
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate--v1-pod
